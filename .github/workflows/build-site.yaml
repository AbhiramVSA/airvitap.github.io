name: build-site
run-name: build live site

on:
  # run when called from another workflow
  workflow_call:

  # run if user manually requests it
  workflow_dispatch:

# variables
env:
  PREVIEWS_FOLDER: preview

permissions:
  contents: write

jobs:
  build-site:
    runs-on: ubuntu-latest

    steps:
      # for debugging
      - uses: crazy-max/ghaction-dump-context@v2

      - name: Checkout branch contents
        uses: actions/checkout@v4

      # Install Ruby manually on self-hosted runners if not already installed
      - name: Install Ruby manually (self-hosted runner)
        if: runner.os == 'Linux' && env.RUNNER_TOOL_CACHE != ''
        run: |
          RUBY_VERSION=3.1.4
          INSTALL_DIR="$RUNNER_TOOL_CACHE/Ruby/${RUBY_VERSION}/x64"
          COMPLETE_FILE="$INSTALL_DIR.complete"
          if [ ! -f "$COMPLETE_FILE" ]; then
            echo "Ruby not installed in tool cache. Installing Ruby ${RUBY_VERSION}..."
            mkdir -p "$INSTALL_DIR"
            # Replace the following command with your actual ruby-build command if necessary
            ruby-build ${RUBY_VERSION} "$INSTALL_DIR"
            touch "$COMPLETE_FILE"
          else
            echo "Ruby ${RUBY_VERSION} is already installed in the tool cache."
          fi

      - name: Install Ruby packages
        uses: ruby/setup-ruby@v1.172.0
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Get Pages url
        id: pages
        uses: actions/configure-pages@v4

      # for debugging
      - if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Set root url
        run: |
          printf "\n\nurl: ${{ steps.pages.outputs.origin }}" >> _config.yaml

      - name: Build live version of site
        run: |
          JEKYLL_ENV=production bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path || '' }}"

      - name: Commit live site to Pages branch
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          folder: _site
          clean-exclude: ${{ env.PREVIEWS_FOLDER }}
          force: false
